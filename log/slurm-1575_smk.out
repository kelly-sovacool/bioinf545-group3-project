Could not find conda environment: bioinf545
You can list all discoverable environments with `conda info --envs`.

Building DAG of jobs...
Using shell: /bin/bash
Provided cores: 16
Rules claiming more threads will be scaled down.
Job counts:
	count	jobs
	1	model_OTU
	1	model_OVU
	2

[Thu Apr 23 00:10:46 2020]
rule model_OTU:
    input: code/predict_OTU.R, code/machine_learning.R, data/16S/mothur_output/stability.opti_mcc.shared
    output: data/model/rf_model_bacteria.tsv, data/model/conf_mat_bacteria.rds, data/model/feat_imp_bacteria.rds
    jobid: 0

[Thu Apr 23 00:10:46 2020]
rule model_OVU:
    input: code/predict_OVU.R, code/machine_learning.R, data/virome/ovu_abundance.tsv
    output: data/model/rf_model_virus.tsv, data/model/conf_mat_virus.rds, data/model/feat_imp_virus.rds
    jobid: 1

here() starts at /home/sovacool/bioinf545-group3-project
here() starts at /home/sovacool/bioinf545-group3-project
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.0     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.5
✔ tidyr   1.0.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
✔ ggplot2 3.3.0     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.5
✔ tidyr   1.0.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Warning messages:
1: package ‘ggplot2’ was built under R version 3.6.3 
2: package ‘tibble’ was built under R version 3.6.3 
3: package ‘tidyr’ was built under R version 3.6.3 
4: package ‘readr’ was built under R version 3.6.3 
5: package ‘purrr’ was built under R version 3.6.3 
6: package ‘dplyr’ was built under R version 3.6.3 
7: package ‘stringr’ was built under R version 3.6.3 
Warning messages:
1: package ‘ggplot2’ was built under R version 3.6.3 
2: package ‘tibble’ was built under R version 3.6.3 
3: package ‘tidyr’ was built under R version 3.6.3 
4: package ‘readr’ was built under R version 3.6.3 
5: package ‘purrr’ was built under R version 3.6.3 
6: package ‘dplyr’ was built under R version 3.6.3 
7: package ‘stringr’ was built under R version 3.6.3 
Parsed with column specification:
cols(
  .default = col_double(),
  subjectid = col_character(),
  DiseaseClass = col_character()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Group = col_character()
)
See spec(...) for full column specifications.
note: only 46 unique complexity parameters in default grid. Truncating the grid to 46 .

Random Forest 

38 samples
68 predictors
 2 classes: 'Cancer', 'Healthy' 

No pre-processing
Resampling: Cross-Validated (5 fold, repeated 5 times) 
Summary of sample sizes: 30, 30, 30, 31, 31, 30, ... 
Resampling results across tuning parameters:

  mtry  ROC        Sens       Spec     
   2    0.5925000  0.5533333  0.5566667
   3    0.6066667  0.6000000  0.5566667
   4    0.6291667  0.6400000  0.5466667
   6    0.6545833  0.6700000  0.5666667
   7    0.6370833  0.6700000  0.5700000
   8    0.6629167  0.6700000  0.5800000
  10    0.6537500  0.6600000  0.6000000
  11    0.6612500  0.6700000  0.5700000
  12    0.6679167  0.6700000  0.6000000
  14    0.7079167  0.6800000  0.5800000
  15    0.6845833  0.6500000  0.5666667
  16    0.6841667  0.6600000  0.6000000
  18    0.6875000  0.6700000  0.5766667
  19    0.6929167  0.6600000  0.5900000
  20    0.7012500  0.6400000  0.5900000
  22    0.7104167  0.6600000  0.5900000
  23    0.7100000  0.6700000  0.5900000
  24    0.6983333  0.6500000  0.5900000
  26    0.6958333  0.6600000  0.5800000
  27    0.7004167  0.6600000  0.5900000
  28    0.7120833  0.6800000  0.5900000
  30    0.7016667  0.6400000  0.5900000
  31    0.7058333  0.6400000  0.6000000
  32    0.7108333  0.6500000  0.6000000
  34    0.7070833  0.6300000  0.5900000
  35    0.7012500  0.6700000  0.5900000
  37    0.7120833  0.6600000  0.5900000
  38    0.7058333  0.6600000  0.5900000
  39    0.7083333  0.6500000  0.6000000
  41    0.7033333  0.6933333  0.5900000
  42    0.7150000  0.6700000  0.5900000
  43    0.7250000  0.6700000  0.5900000
  45    0.7225000  0.6500000  0.5900000
  46    0.7166667  0.6700000  0.5900000
  47    0.7166667  0.6600000  0.6100000
  49    0.7116667  0.6700000  0.6100000
  50    0.7125000  0.6600000  0.6000000
  51    0.7216667  0.6500000  0.6000000
  53    0.7254167  0.6700000  0.6000000
  54    0.7116667  0.6400000  0.6000000
  55    0.7175000  0.6600000  0.6000000
  57    0.7195833  0.6800000  0.5900000
  58    0.7137500  0.6666667  0.6000000
  59    0.7254167  0.6666667  0.5900000
  61    0.7129167  0.6500000  0.5900000
  62    0.7154167  0.6700000  0.6100000
  63    0.7200000  0.6600000  0.6100000
  65    0.7179167  0.6600000  0.5800000
  66    0.7295833  0.6466667  0.6100000
  68    0.7100000  0.6400000  0.6000000

ROC was used to select the optimal model using the largest value.
The final value used for the model was mtry = 66.
[Thu Apr 23 00:11:00 2020]
Finished job 1.
1 of 2 steps (50%) done
Random Forest 

  40 samples
3904 predictors
   2 classes: 'Cancer', 'Healthy' 

No pre-processing
Resampling: Cross-Validated (5 fold, repeated 5 times) 
Summary of sample sizes: 32, 32, 32, 32, 32, 32, ... 
Resampling results across tuning parameters:

  mtry  ROC      Sens  Spec
     2  0.54500  0.62  0.41
     3  0.52500  0.53  0.45
     4  0.53750  0.56  0.53
     5  0.56875  0.60  0.48
     6  0.55125  0.49  0.59
     8  0.48875  0.48  0.50
     9  0.49625  0.46  0.54
    10  0.53375  0.48  0.54
    12  0.52875  0.46  0.56
    14  0.57500  0.47  0.55
    17  0.55250  0.51  0.58
    20  0.55750  0.48  0.59
    23  0.56000  0.47  0.61
    27  0.56750  0.52  0.59
    32  0.56625  0.49  0.59
    37  0.51625  0.49  0.58
    44  0.61125  0.49  0.62
    51  0.56750  0.56  0.59
    60  0.53250  0.47  0.59
    70  0.58625  0.50  0.59
    81  0.62250  0.57  0.60
    95  0.58375  0.56  0.58
   111  0.56625  0.54  0.58
   130  0.60375  0.52  0.63
   151  0.58875  0.54  0.57
   177  0.62250  0.59  0.61
   206  0.61500  0.55  0.63
   241  0.65000  0.60  0.66
   281  0.62375  0.58  0.61
   328  0.65375  0.60  0.63
   383  0.65500  0.58  0.62
   448  0.66000  0.62  0.66
   523  0.67375  0.57  0.66
   610  0.66125  0.61  0.65
   712  0.65125  0.63  0.66
   831  0.69375  0.65  0.66
   970  0.71250  0.66  0.69
  1133  0.70875  0.67  0.68
  1322  0.73250  0.70  0.65
  1543  0.71375  0.69  0.67
  1801  0.73500  0.70  0.70
  2103  0.73250  0.67  0.69
  2455  0.74875  0.74  0.72
  2865  0.74000  0.73  0.72
  3344  0.76125  0.74  0.75
  3904  0.76500  0.72  0.76

ROC was used to select the optimal model using the largest value.
The final value used for the model was mtry = 3904.
[Thu Apr 23 00:12:31 2020]
Finished job 0.
2 of 2 steps (100%) done
Complete log: /home/sovacool/bioinf545-group3-project/.snakemake/log/2020-04-23T001044.818484.snakemake.log
